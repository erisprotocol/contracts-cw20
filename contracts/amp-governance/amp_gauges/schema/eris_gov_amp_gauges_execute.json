{"$schema":"http://json-schema.org/draft-07/schema#","title":"ExecuteMsg","description":"This structure describes the execute messages available in the contract.","oneOf":[{"description":"Vote allows a vAMP holder to cast votes on which validators should get the delegations","type":"object","required":["vote"],"properties":{"vote":{"type":"object","required":["votes"],"properties":{"votes":{"type":"array","items":{"type":"array","items":[{"type":"string"},{"type":"integer","format":"uint16","minimum":0}],"maxItems":2,"minItems":2}}},"additionalProperties":false}},"additionalProperties":false},{"description":"Updates the vote for a specified user. Only can be called from the escrow_addr","type":"object","required":["update_vote"],"properties":{"update_vote":{"type":"object","required":["lock_info","user"],"properties":{"lock_info":{"$ref":"#/definitions/LockInfoResponse"},"user":{"type":"string"}},"additionalProperties":false}},"additionalProperties":false},{"description":"TunePools transforms the latest vote distribution into alloc_points which are then applied to ASTRO generators","type":"object","required":["tune_vamp"],"properties":{"tune_vamp":{"type":"object","additionalProperties":false}},"additionalProperties":false},{"type":"object","required":["update_config"],"properties":{"update_config":{"type":"object","properties":{"validators_limit":{"description":"ChangeValidatorsLimit changes the max amount of validators that can be voted at once to receive delegations","type":["integer","null"],"format":"uint64","minimum":0}},"additionalProperties":false}},"additionalProperties":false},{"type":"object","required":["remove_user"],"properties":{"remove_user":{"type":"object","required":["user"],"properties":{"user":{"type":"string"}},"additionalProperties":false}},"additionalProperties":false},{"description":"ProposeNewOwner proposes a new owner for the contract","type":"object","required":["propose_new_owner"],"properties":{"propose_new_owner":{"type":"object","required":["expires_in","new_owner"],"properties":{"expires_in":{"description":"The timestamp when the contract ownership change expires","type":"integer","format":"uint64","minimum":0},"new_owner":{"description":"Newly proposed contract owner","type":"string"}},"additionalProperties":false}},"additionalProperties":false},{"description":"DropOwnershipProposal removes the latest contract ownership transfer proposal","type":"object","required":["drop_ownership_proposal"],"properties":{"drop_ownership_proposal":{"type":"object","additionalProperties":false}},"additionalProperties":false},{"description":"ClaimOwnership allows the newly proposed owner to claim contract ownership","type":"object","required":["claim_ownership"],"properties":{"claim_ownership":{"type":"object","additionalProperties":false}},"additionalProperties":false}],"definitions":{"Decimal":{"description":"A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","type":"string"},"LockInfoResponse":{"description":"This structure is used to return the lock information for a vAMP position.","type":"object","required":["amount","coefficient","end","fixed_amount","slope","start","voting_power"],"properties":{"amount":{"description":"The amount of ampLP locked in the position","allOf":[{"$ref":"#/definitions/Uint128"}]},"coefficient":{"description":"This is the initial boost for the lock position","allOf":[{"$ref":"#/definitions/Decimal"}]},"end":{"description":"End time for the vAMP position decay","type":"integer","format":"uint64","minimum":0},"fixed_amount":{"description":"fixed sockel","allOf":[{"$ref":"#/definitions/Uint128"}]},"slope":{"description":"Slope at which a staker's vAMP balance decreases over time","allOf":[{"$ref":"#/definitions/Uint128"}]},"start":{"description":"Start time for the vAMP position decay","type":"integer","format":"uint64","minimum":0},"voting_power":{"description":"includes only decreasing voting_power, it is the current voting power of the period currently queried.","allOf":[{"$ref":"#/definitions/Uint128"}]}},"additionalProperties":false},"Uint128":{"description":"A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```","type":"string"}}}