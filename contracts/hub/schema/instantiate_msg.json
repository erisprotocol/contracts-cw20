{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "cw20_code_id",
    "decimals",
    "epoch_period",
    "name",
    "owner",
    "protocol_fee_contract",
    "protocol_reward_fee",
    "symbol",
    "unbond_period",
    "validators"
  ],
  "properties": {
    "cw20_code_id": {
      "description": "Code ID of the CW20 token contract",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "decimals": {
      "description": "Number of decimals of the liquid staking token",
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "delegation_strategy": {
      "description": "Strategy how delegations should be handled",
      "anyOf": [
        {
          "$ref": "#/definitions/DelegationStrategy_for_String"
        },
        {
          "type": "null"
        }
      ]
    },
    "epoch_period": {
      "description": "How often the unbonding queue is to be executed, in seconds",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "name": {
      "description": "Name of the liquid staking token",
      "type": "string"
    },
    "owner": {
      "description": "Account who can call certain privileged functions",
      "type": "string"
    },
    "protocol_fee_contract": {
      "description": "Contract address where fees are sent",
      "type": "string"
    },
    "protocol_reward_fee": {
      "description": "Fees that are being applied during reinvest of staking rewards",
      "allOf": [
        {
          "$ref": "#/definitions/Decimal"
        }
      ]
    },
    "symbol": {
      "description": "Symbol of the liquid staking token",
      "type": "string"
    },
    "unbond_period": {
      "description": "The staking module's unbonding time, in seconds",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "validators": {
      "description": "Initial set of validators who will receive the delegations",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "vote_operator": {
      "description": "Contract address that is allowed to vote",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "DelegationStrategy_for_String": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "uniform"
          ]
        },
        {
          "description": "validators receive delegations based on community voting + merit points",
          "type": "object",
          "required": [
            "gauges"
          ],
          "properties": {
            "gauges": {
              "type": "object",
              "required": [
                "amp_factor_bps",
                "amp_gauges",
                "max_delegation_bps",
                "min_delegation_bps",
                "validator_count"
              ],
              "properties": {
                "amp_factor_bps": {
                  "description": "weight between amp and emp gauges between 0 and 1",
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0.0
                },
                "amp_gauges": {
                  "description": "gauges based on vAmp voting",
                  "type": "string"
                },
                "emp_gauges": {
                  "description": "gauges based on eris merit points",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "max_delegation_bps": {
                  "description": "max amount of delegation needed",
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0.0
                },
                "min_delegation_bps": {
                  "description": "min amount of delegation needed",
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0.0
                },
                "validator_count": {
                  "description": "count of validators that should receive delegations",
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
